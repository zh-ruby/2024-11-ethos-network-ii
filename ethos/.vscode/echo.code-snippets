{
  "Route boilerplate": {
    "prefix": "echo-route",
    "description": "Boilerplate for a Route class",
    "body": [
      "import { type Request, type Response } from 'express';",
      "import { Route } from './route.base.js';",
      "",
      "export class ${1:__ROUTE_NAME__} extends Route {",
      "  async ${2:__METHOD_NAME__}(req: Request, res: Response): Promise<void> {",
      "    void this.initService(${3:__SERVICE_NAME__}, req.params).run(req, res);",
      "  }",
      "}",
      ""
    ]
  },
  "Service boilerplate": {
    "prefix": "echo-service",
    "description": "Boilerplate for a Service class",
    "body": [
      "import { z } from 'zod';",
      "import { Service } from '../service.base.js';",
      "import { type AnyRecord } from '../service.types.js';",
      "",
      "const schema = z.object({",
      "  foo: z.string(),",
      "});",
      "",
      "type Input = z.infer<typeof schema>;",
      "type Output = {",
      "  foo: string;",
      "};",
      "",
      "export class ${1:__SERVICE_NAME__} extends Service<typeof schema, Output> {",
      "  validate(params: AnyRecord): Input {",
      "    return this.validator(params, schema);",
      "  }",
      "",
      "  async execute({ foo }: Input): Promise<Output> {",
      "    return { foo };",
      "  }",
      "}",
      ""
    ]
  }
}
